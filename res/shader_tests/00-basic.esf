#include "lib.esh"

#pragma once

struct Test
{
	float a;
	float b;
};

SamplerState SS_TEST =
{
	.AddressU = WRAP,
	.AddressV = CLAMP,
	.AddressW = MIRROR,	
};

const Test Vals = { .a = 0.0, .b = 1.0 };

const float myConstFloat = 1.0;

[something(1.0)]
struct VS_IN
{
	float3 position_ : SV_POSITION; // comment test.
}; /* comment test 2 */

[else(2.0)]
struct VS_OUT
{
	float3 position_ : SV_POSITION;
};

VS_OUT vs_main(VS_IN _in)
{
	VS_OUT _out = (VS_OUT)0;
	_out.position_ = _in.position;
	return out;
}

[earlydepthstencil]
float4 ps_main(VS_OUT _in) : COLOR0
{
	return float4(1.0, 1.0, 1.0, 1.0);
}

RenderState RS_DEFAULT =
{
	.BlendStates = {
		.Enable = 1,
		.SrcBlend = SRC_COLOR,
	},

	.StencilFront = {

	},

	.StencilBack = {

	},

	.DepthEnable = 1,
	.StencilRef = 0x1f,
	.FillMode = WIREFRAME,
};

Technique TECH_MAIN =
{
	.VertexShader = vs_main,
	.PixelShader = ps_main,
	.RenderState = RS_DEFAULT,
};
