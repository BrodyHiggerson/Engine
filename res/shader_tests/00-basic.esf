#include "../shaders/stdlib.esh"
#include "../shaders/common_bindings.esh"

BindingSet MaterialBindings
{
	Texture2D tex_diffuse;
};

struct VS_IN
{
	float4 position : POSITION; // comment test.
}; /* comment test 2 */

struct VS_OUT
{
	float4 position : SV_POSITION;
	float2 uv : TEXCOORD0;
};

VS_OUT vs_main(in VS_IN _in)
{
	VS_OUT _out = (VS_OUT)0;
	float4 position = mul(inObject[0].world_, _in.position);
	_out.position = mul(viewParams.view_, position);
	_out.uv = _in.position.xy;
	return _out;
}

float4 ps_debug(in VS_OUT _in) : SV_TARGET0
{
	return float4(fmod(_in.position.x, 1.0), fmod(_in.position.y, 1.0), 1.0, 1.0);
}

float4 ps_main(in VS_OUT _in) : SV_TARGET0
{
	return tex_diffuse.Sample(SS_LINEAR_WRAP, _in.uv.xy) * float4(1.0, 1.0, 1.0, 1.0);
}

float4 ps_shadow(in VS_OUT _in) : SV_TARGET0
{
	return float4(1.0, 0.0, 1.0, 1.0);
}

RenderState RS_DEFAULT =
{
	.BlendStates = {
		.Enable = 1,
		.SrcBlend = SRC_COLOR,
	},

	.StencilFront = {

	},

	.StencilBack = {

	},

	.DepthEnable = 1,
	.FillMode = SOLID,
};

Technique TECH_DEBUG =
{
	.VertexShader = vs_main,
	.PixelShader = ps_debug,
	.RenderState = RS_DEFAULT,
};

Technique TECH_MAIN =
{
	.VertexShader = vs_main,
	.PixelShader = ps_main,
	.RenderState = RS_DEFAULT,
};

Technique TECH_SHADOW =
{
	.VertexShader = vs_main,
	.PixelShader = ps_shadow,
	.RenderState = RS_DEFAULT,
};
