CMAKE_MINIMUM_REQUIRED(VERSION 3.2.3)

IF(MSVC)
	FindWindowsSDK()
ENDIF()

# Engine project is C++
PROJECT(Engine CXX)

# Output directories.
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/output/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/output/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/output/bin)

# Add third party

SET(SDL_SHARED ON)
SET(SDL_STATIC OFF)

ADD_SUBDIRECTORY("3rdparty/SDL-mirror")

SET_TARGET_PROPERTIES(SDL2main PROPERTIES FOLDER "3rdparty/SDL2")

IF(SDL_SHARED)
	SET_TARGET_PROPERTIES(SDL2 PROPERTIES FOLDER 3rdparty/SDL2)
ENDIF()

IF(SDL_STATIC)
	SET_TARGET_PROPERTIES(SDL2-static PROPERTIES FOLDER "3rdparty/SDL2")
ENDIF()

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

SET(CMAKE_MODULE_PATH "cmake")

# Version.
SET(ENGINE_MAJOR_VERSION 0)
SET(ENGINE_MINOR_VERSION 0)
SET(ENGINE_MICRO_VERSION 0)
SET(ENGINE_VERSION "${ENGINE_MAJOR_VERSION}.${ENGINE_MINOR_VERSION}.${ENGINE_MICRO_VERSION}")

IF(MSVC)
	# Setup warning level.
    ADD_DEFINITIONS(/W4)		# level 4
    ADD_DEFINITIONS(/WX)		# warnings as errors
    ADD_DEFINITIONS(/wd4100)	# disable unreferenced formal parameter

    # Disable exceptions.
	ADD_DEFINITIONS(/EHsc)
ENDIF()

# Include directories.
INCLUDE_DIRECTORIES(
	# 3rd party includes.
	"3rdparty/Catch/include"
	"3rdparty/SDL-mirror/include"

	# Source.
	"src"
)

# Add source.
ADD_SUBDIRECTORY("src/core")
ADD_SUBDIRECTORY("src/client")
ADD_SUBDIRECTORY("src/gpu")
ADD_SUBDIRECTORY("src/gpu_d3d12")
ADD_SUBDIRECTORY("src/job")
ADD_SUBDIRECTORY("src/math")
ADD_SUBDIRECTORY("src/plugin")
